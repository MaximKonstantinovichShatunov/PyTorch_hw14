import telebot
from telebot import types
from functions import token
import webbrowser
import telebot
from functions import get_object_from_mongodb , insert_data_to_mongodb, check_object_existence, get_collection_count
import datetime

admin_id = 653372350 #5075691809
bot = telebot.TeleBot(token)



@bot.message_handler(commands=['site'])
def get_open_website(message): # –õ–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É "site"       
    webbrowser.open('https://vostok-auto.ru/')



@bot.message_handler(commands=['menu']) # –õ–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É "menu"   
def open_starts(message):
    starts(bot, message)

@bot.message_handler(commands=['start']) # –õ–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É "start"
def registr(message):
    
    def get_firstName(answer):
            reg_list["firstName"] = answer.text
            answer = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é:")
            bot.register_next_step_handler(answer, get_lastName)
    def get_lastName(answer):
            reg_list["lastName"] = answer.text
            answer = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≥–æ—Å–Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è:")
            bot.register_next_step_handler(answer, get_gosNomer)
    def get_gosNomer(answer):
            reg_list["gosNomer"] = answer.text
            answer = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
            bot.register_next_step_handler(answer, get_phoneNumber)

    def get_phoneNumber(answer):
        number = answer.text
        
        if len(str(number)) >= 10 and ('+' in (str(number)) or '7' in (str(number)) or '8' in (str(number))): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ù–æ–º–µ—Ä–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ù–∞–ø–∏—Å–∞–Ω–∏—è
            reg_list["phoneNumber"] = answer.text
            bonus = reg_list["bonus"]
            bot.send_message(message.chat.id, f"–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!\n –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ  <b>{bonus}</b> –±–æ–Ω—É—Å–æ–≤", parse_mode='html')
            insert_data_to_mongodb(reg_list, "users")
            starts(bot=bot, message=message)
        else:
            bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ <em><b>10 —Ü–∏—Ñ—Ä!</b></em>\n –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", parse_mode='html')
            bot.register_next_step_handler(message, get_lastName)

    if check_object_existence("users", message.from_user.id): # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        starts(bot=bot, message=message)
    
    else: # –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        reg_list = {
        "_id" : message.chat.id,
        "firstName" : "",
        "lastName" : "",
        "gosNomer" : "",
        "phoneNumber" : "",
        "bonus" : 1000}
        answer= bot.send_message(message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –Ω–∞—à–µ–º –ë–æ—Ç–µ.\n –í–≤–µ–¥–∏—Ç–µ –∏–º—è:")

        bot.register_next_step_handler(answer, get_firstName)

def starts(bot, message): 
    """–ö–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3) # 
    btn1 = types.KeyboardButton("–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Åüîß")
    btn2 = types.KeyboardButton("–ó–∞–ø—á–∞—Å—Ç–∏ ‚öôÔ∏è")
    btn3 = types.KeyboardButton(f"–ú–æ–π  \n –ø—Ä–æ—Ñ–∏–ª—å")
    btn4 = types.KeyboardButton("–ê–∫—Ü–∏–∏\n üí•")
    btn5 = types.KeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç")
    btn6 = types.KeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã\n‚òéÔ∏è")
    markup.row(btn1, btn2,btn3)
    
    markup.row(btn4,btn5,btn6)
    
    bot.send_message(message.chat.id, f'–î–æ–±—Ä—ã–π –¥–µ–Ω—å, {message.from_user.first_name}.\n–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=markup)
    bot.register_next_step_handler(message, menu_button)
    
    

def menu_button(message):
    
    if message.text == "–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Åüîß":
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton("–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞")
        btn2 = types.KeyboardButton("–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
        btn3 = types.KeyboardButton("–¢–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ")
        btn4 = types.KeyboardButton("–ü–æ–¥–≤–µ—Å–∫–∞")
        btn5 = types.KeyboardButton("–î–≤–∏–≥–∞—Ç–µ–ª—å")
        btn6 = types.KeyboardButton("–¢–æ—Ä–º–æ–∑–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")
        btn7 = types.KeyboardButton("–¢—Ä–∞—Å–º–∏—Å—Å–∏—è")
        btn8 = types.KeyboardButton("–≠–ª–µ–∫—Ç—Ä–æ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ")
        btn9 = types.KeyboardButton("–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä")
        btn10 = types.KeyboardButton("–†—É–ª–µ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
        btn11 = types.KeyboardButton("–í—ã—Ö–ª–æ–ø–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")
        btn12 = types.KeyboardButton("–î–æ–ø–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ")
        markup.row(btn1, btn2,btn3)
        markup.row(btn4,btn5,btn6)
        markup.row(btn7,btn8, btn9)
        markup.row(btn10,btn11, btn12)
        bot.send_message(message.chat.id,f'–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É',reply_markup=markup)
        bot.register_next_step_handler(message, autoservis_button)

    elif message.text == "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç":        
        webbrowser.open('https://vostok-auto.ru/')
    elif message.text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã\n‚òéÔ∏è":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        callback_button = types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(callback_button)
        bot.send_message(message.chat.id,f'<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã <u>–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å–∞</u> - –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å—ã –∏ –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏</b>\n\n'
                         f'+7(831)000-00-00 –º–Ω–æ–≥–æ–∫–∞–Ω–∞–ª—å–Ω—ã–π\n'
                         f'+7(929)000-00-00 –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å\n'
                         f'+7(930)000-00-00 –∑–∞–ø—á–∞—Å—Ç–∏\n'
                         f'–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: \n–ü–Ω.-–ü—Ç.: —Å 8-00 –¥–æ 19-00;\n–°–±-–í—Å.: —Å 9-00 –¥–æ 18-00', parse_mode='html',reply_markup=markup)
        
    elif message.text == "–ú–æ–π  \n –ø—Ä–æ—Ñ–∏–ª—å":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        callback_button = types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(callback_button)
        
        reg_list =get_object_from_mongodb("users", {"_id" : message.from_user.id})
        bot.send_message(message.chat.id,f'<b>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n'
                         f'–ò–º—è: {reg_list["firstName"]}\n'
                         f'–§–∞–º–∏–ª–∏—è: {reg_list["lastName"]}\n'
                         f'–ì–æ—Å–Ω–æ–º–µ—Ä: {reg_list["gosNomer"]}\n'
                         f'–¢–µ–ª–µ—Ñ–æ–Ω: {reg_list["phoneNumber"]}\n'
                         f'–ù–∞–∫–æ–ø–ª–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤ : {reg_list["bonus"]}\n', parse_mode='html',reply_markup=markup)
    
    elif message.text == "–ê–∫—Ü–∏–∏\n üí•":
        photo = open('akciya1.jpg', 'rb') 
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton(text ="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É")
        callback_button = types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1,callback_button)
        bot.send_photo(message.chat.id,photo,f'–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∑–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞\n–≤ –¥–≤–∏–≥–∞—Ç–µ–ª–µ'
                                         f' –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ\n3,5 –ª–∏—Ç—Ä–æ–≤ —Ä–∞–∑–ª–∏–≤–Ω–æ–≥–æ –º–∞—Å–ª–∞\nShell Helix Ultra 5w40 –∏ 5w30.\n–í –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–µ—á–µ–Ω—å —Ä–∞–±–æ—Ç –≤—Ö–æ–¥—è—Ç:\n'
                                        f'- –∑–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ –≤ –¥–≤–∏–≥–∞—Ç–µ–ª–µ\n- —Å–Ω—è—Ç–∏–µ/—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞—â–∏—Ç—ã –¥–≤–∏–≥–∞—Ç–µ–ª—è', parse_mode='markdown',reply_markup=markup)
        bot.register_next_step_handler(message,uslugi_akciya)

def uslugi_akciya(message):
    usluga = "–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ –í –î–≤–∏–≥–∞—Ç–µ–ª–µ(–ê–∫—Ü–∏—è)"
    if message.text == "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É":
        bot.register_next_step_handler(message,zayavka_done,usluga)
    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        starts(bot=bot, message=message)

def autoservis_button(message):
    if message.text == "–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞":
        usluga = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton("–í –î–≤–∏–≥–∞—Ç–µ–ª–µ")
        btn2 = types.KeyboardButton("–í –ê–ö–ü–ü")
        callback_button = types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1,btn2,callback_button)
        bot.send_message(message.chat.id,f'–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É',reply_markup=markup)
        bot.register_next_step_handler(message,Oil_In_Engine,usluga)
        

def Oil_In_Engine(message, usluga):
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        starts(bot=bot, message=message)
    elif message.text == "–í –î–≤–∏–≥–∞—Ç–µ–ª–µ":
        usluga = usluga + " " + message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn1 = types.KeyboardButton(text ="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É")
        callback_button = types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1,callback_button)
        bot.send_message(message.chat.id,'<b>–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ –≤ –¥–≤–∏–≥–∞—Ç–µ–ª–µ</b> <em>500 ‚ÇΩ</em>\n\n<b>–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ –≤ –¥–≤–∏–≥–∞—Ç–µ–ª–µ</b><em> 750 ‚ÇΩ</em>\n<em>–µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç —Å–≤–æ—ë –º–∞—Å–ª–æ</em>', parse_mode='html', reply_markup=markup)
        bot.register_next_step_handler( message,zayavka_done,usluga)



def zayavka_done( message, usluga):
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        starts(bot=bot, message=message)

    elif message.text == "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        callback_button = types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(callback_button)
        reg_list =get_object_from_mongodb("users", {"_id" : message.from_user.id})
        
        zakaz_id = get_collection_count("zayavki")+100001
        zayavka = {
            "_id" : zakaz_id,
            "firstName" : reg_list["firstName"],
            "phoneNumber" : reg_list["phoneNumber"],
            "usluga" : usluga,
            "time" : datetime.datetime.today().strftime("%d-%b-%Y (%H:%M)")
            }
        
        
            
        bot.send_message(message.chat.id,f'–í–∞—à–µ–º—É –∑–∞–∫–∞–∑—É –ø—Ä–∏—Å–≤–æ–µ–Ω –Ω–æ–º–µ—Ä {zakaz_id}. –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n'
                            f'–î–æ–∂–¥–∏—Ç–µ—Å—å –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞.',reply_markup=markup)
        
        bot.send_message(admin_id, f'!!!–í–ù–ò–ú–ê–ù–ò–ï!!!\n'                                    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –ê–¥–º–∏–Ω—É
                                    f'–ü–æ—Å—Ç—É–ø–∏–ª–∞ –ó–ê–Ø–í–ö–ê {zakaz_id}:\n'
                                    f'id —á–∞—Ç–∞: {message.chat.id}\n'
                                    f'–ò–º—è: {reg_list["firstName"]}\n'
                                    f'–§–∞–º–∏–ª–∏—è: {reg_list["lastName"]}\n'
                                    f'–ì–æ—Å–Ω–æ–º–µ—Ä: {reg_list["gosNomer"]}\n'
                                    f'‚Ññ —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {reg_list["phoneNumber"]}\n'
                                    f'–£–°–õ–£–ì–ê: {usluga}\n')
        insert_data_to_mongodb(zayavka, "zayavki")
        bot.send_message(admin_id, '–ó–∞—è–≤–∫–∞ –≤–Ω–µ—Å–µ–Ω–∞ –≤ –±–∞–∑—É ‚úÖ\n')
            
        
        
            

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    if message.text == "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É":
        starts(bot=bot, message=message)
"""
# –î–∞–ª—å—à–µ –®–ª—è–ø–∞

@bot.message_handler(content_types=['photo'])
def get_photo(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url = 'https://vostok-auto.ru/')
    btn2 = types.InlineKeyboardButton("—É–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ", callback_data='delete')
    btn3 = types.InlineKeyboardButton("–∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data='edit')
    markup.row(btn1)
    markup.row(btn2,btn3)
    bot.reply_to(message, '–ö–∞–∫–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ!',reply_markup = markup)

@bot.message_handler(commands=['start', 'main' , 'hello'])
def main(message):
    bot.send_message(message.chat.id, f'–ü–†–ò–í–ï–¢, {message.from_user.first_name}')

@bot.message_handler(commands=['help'])
def main(message):
    bot.send_message(message.chat.id, '<b>help</b> <em>information</em>', parse_mode='html')
profile_info =5

@bot.callback_query_handler(func=lambda callback: True)

@bot.message_handler(commands=['start'])
def start(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=1)
    callback_button = types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    keyboard.add(callback_button)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É", reply_markup=keyboard)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        bot.reply_to(message, "–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É!")"""






"""def collback_message(callback):


    if callback.data == "Return to top":
        pass
    elif callback.text == "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç\n üåê":
        webbrowser.open('https://vostok-auto.ru/')
    elif callback.text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã‚òéÔ∏è":
        bot.send_message(callback.chat.id, '–°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä')
        bot.register_next_step_handler(callback, autoservis_button)
@bot.message_handler()
def info(message):
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
       bot.send_message(message.chat.id, f'–ü–†–ò–í–ï–¢, {message.from_user.first_name}')
    elif message.text.lower() == 'id':
        bot.reply_to(message, f'ID: {message.from_user.id}')

def summa(message):
    global amount
    zayavki_col = 5
    try:
        amount = int(message.text.strip())
    except ValueError:
        bot.send_message(message.chat.id, f'–Ω–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç')
        bot.register_next_step_handler(message, summa)
        return # —á—Ç–æ –±—ã —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª—Å—è
"""
bot.polling(none_stop=True)